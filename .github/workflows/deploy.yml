# deploy.yml (GitHub Actions)
name: Deploy FastAPI Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      ENVIRONMENT: aws

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/shopping-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/shopping-backend:latest
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Fetch Elastic Beanstalk S3 Bucket
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          S3_BUCKET="elasticbeanstalk-${{ secrets.AWS_REGION }}-${AWS_ACCOUNT_ID}"
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV

      - name: Generate new deployment version
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "VERSION_LABEL=fastapi-backend-${TIMESTAMP}" >> $GITHUB_ENV

      # ✅ Set environment variables FIRST
      - name: Set environment variables in Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name fastapi-backend-env \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_HOST,Value=${{ secrets.DB_HOST }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PORT,Value=${{ secrets.DB_PORT }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_NAME,Value=${{ secrets.DB_NAME }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_USER,Value=${{ secrets.DB_USER }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PASSWORD,Value=${{ secrets.DB_PASSWORD }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=ENVIRONMENT,Value=aws

      # ✅ Wait for EB to be Ready
      - name: Wait for EB to be Ready
        run: |
          while true; do
            STATUS=$(aws elasticbeanstalk describe-environments --environment-names fastapi-backend-env --query "Environments[0].Status" --output text)
            if [ "$STATUS" == "Ready" ]; then
              break
            fi
            echo "Waiting for EB to be Ready... (current status: $STATUS)"
            sleep 30
          done

      # ✅ Upload Dockerrun.aws.json only if it exists
      - name: Check if Dockerrun.aws.json exists
        id: check_dockerrun
        run: |
          if [ -f Dockerrun.aws.json ]; then
            echo "DOCKERRUN_EXISTS=true" >> $GITHUB_ENV
          else
            echo "DOCKERRUN_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Upload Dockerrun.aws.json to S3 (if exists)
        if: env.DOCKERRUN_EXISTS == 'true'
        run: |
          aws s3 cp Dockerrun.aws.json s3://$S3_BUCKET/fastapi-backend-${VERSION_LABEL}.json

      # ✅ Create EB application version (conditionally)
      - name: Create new Elastic Beanstalk application version
        if: env.DOCKERRUN_EXISTS == 'true'
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name fastapi-backend \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=fastapi-backend-${VERSION_LABEL}.json

      # ✅ Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name fastapi-backend \
            --environment-name fastapi-backend-env \
            --version-label $VERSION_LABEL
